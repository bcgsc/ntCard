jobs:
- job: linux
  pool:
    vmImage: Ubuntu 16.04
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc g++ make
    displayName: Install common
  - script: |
      ./autogen.sh
      ./configure
      make distcheck
    displayName: Compiling and testing ntCard
  - script: |
      curl https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
      sudo apt-add-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-7 main"
      sudo apt-get update
      sudo apt-get install -y --no-install-recommends clang-format-7
      sudo ln -sf clang-format-7 /usr/bin/clang-format
    displayName: Install clang-format
  - script: make clang-format
    displayName: Run clang-format

- job: linux_gcc9
  pool:
    vmImage: Ubuntu 16.04
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc-9 g++-9 make
    displayName: Install common
  - script: |
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="CC=gcc-9 CXX=g++-9"
      ./configure CC=gcc-9 CXX=g++-9
      make distcheck
    displayName: Compiling and testing ntCard with gcc 9
    
- job: linux_clang9
  pool:
    vmImage: Ubuntu 16.04
  steps:
  - script: |
      sudo apt-get update -qq
      sudo apt-get install -qq software-properties-common
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt-get update -qq
      sudo apt-get install -qq autoconf automake gcc-9 g++-9 make
    displayName: Install common
  - script: sudo apt-get install -qq clang-9
    displayName: Install clang-9
  - script: |
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="CC=clang-9 CXX=clang++-9"
      ./configure CC=clang-9 CXX=clang++-9
      make distcheck
    displayName: Compiling and testing ntCard with clang 9

- job: macOS_default_gcc
  pool:
    vmImage: macOS-10.14
  steps:
  - script: |
      brew update
      brew install automake make
      brew install gcc
    displayName: Install common
  - script: |
      ./autogen.sh
      ./configure
      make distcheck
    displayName: Compiling and testing ntCard with default gcc

- job: macOS_default_clang
  pool:
    vmImage: macOS-10.14
  steps:
  - script: |
      brew update
      brew install automake make llvm
    displayName: Install common
  - script: |
      ./autogen.sh
      export DISTCHECK_CONFIGURE_FLAGS="CC=clang CXX=clang++ CPPFLAGS = -I/usr/local/opt/llvm/include -fopenmp LDFLAGS = -L/usr/local/opt/llvm/lib"
      ./configure CC=clang CXX=clang++ CPPFLAGS="-I/usr/local/opt/llvm/include -fopenmp" LDFLAGS="-L/usr/local/opt/llvm/lib"
      make distcheck
    displayName: Compiling and testing ntCard with default clang
